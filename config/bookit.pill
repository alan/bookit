require 'yaml'
ROOT = File.expand_path(File.join(File.dirname(__FILE__), '..'))
Email = YAML.load_file(ROOT + '/config/config.yml')['production']['email']
require 'rubygems'
require 'pony'

module Bluepill
  module Triggers
    class EmailNotifier < Bluepill::Trigger
      def initialize(process, options = {})
        @notify_on = [options.delete(:notify_on)]
        super
      end

      def notify(transition)
        # self.logger.info(transition.to_name)
        if @notify_on.include?(transition.to_name)
          send_notification(transition)
        end
      end

      private

      def send_notification(transition)
        Pony.mail(
          :to => Email['recipient'],
          :subject => "Your process #{self.process.name}",
          :body => "Your process #{self.process.name}",
          :content_type => 'text/html',
          :via => :smtp,
          :via_options => {
             :host => "smtp.gmail.com",
             :port => "587",
             :auth => :plain,
             :username => Email['user'],
             :password => Email['password'],
             :tls => true
            }
        )
      end
    end
  end
end


Bluepill.application("bookit") do |app|
  app.process("backend_app") do |process|
    process.working_dir = ROOT

    process.start_command = "/usr/bin/env APP_ENV=production script/bookit_ctl start"
    process.stop_command = "script/bookit_ctl stop"
    process.restart_command = "/usr/bin/env APP_ENV=production script/bookit_ctl restart"

    process.pid_file = ROOT + "/log/bookit.pid"

    process.restart_grace_time  = 10.seconds
    process.checks :mem_usage, :every => 5.minutes, :below => 50.megabytes, :times => [3,5]
  end
end
